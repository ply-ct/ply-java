openapi: 3.0.2
info:
  title: Plyex Greetings
  version: 1.0.1
paths:
  /greetings:
    get:
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
            format: email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
    post:
      requestBody:
        description: greeting
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 400
                  message: Bad Request
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 409
                  message: Conflict
  /greetings/{name}:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 404
                  message: Not Found
    put:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: greeting
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 400
                  message: Bad Request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 404
                  message: Not Found
    delete:
      summary: For some reason, DELETE already has a summary
      description: And a description
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 200
                  message: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status:
                  code: 404
                  message: Not Found
components:
  schemas:
    Greeting:
      additionalProperties: false
      properties:
        name:
          type: string
        salutation:
          maxLength: 10
          type: string
      required:
        - salutation
        - name
      type: object
    Status:
      additionalProperties: false
      properties:
        code:
          $ref: '#/components/schemas/StatusCodes'
        errors:
          items:
            type: string
          type: array
        message:
          type: string
      required:
        - code
        - message
      type: object
    StatusResponse:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/Status'
      required:
        - status
      type: object
    StatusCodes:
      enum:
        - 100
        - 101
        - 102
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 307
        - 308
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 418
        - 419
        - 420
        - 422
        - 423
        - 424
        - 428
        - 429
        - 431
        - 451
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        - 507
        - 511
      type: number
